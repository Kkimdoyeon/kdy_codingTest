#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <string.h>

char* solution(const char* rny_string) {
    // 원본 문자열의 길이를 구합니다.
    int len = strlen(rny_string);
    
    // 'm'의 개수를 셉니다.
    int m_count = 0;
    for (int i = 0; i < len; i++) {
        if (rny_string[i] == 'm') {
            m_count++;
        }
    }
    
    // 최종 문자열의 길이를 계산합니다. 'm'은 "rn"으로 바뀌므로, 각 'm'당 1글자씩 더 추가됩니다.
    int new_len = len + m_count;
    
    // 동적 메모리 할당 (null 문자 포함을 위해 +1).
    char* answer = (char*)malloc(new_len + 1);
    if (answer == NULL) {
        return NULL; // 메모리 할당 실패 시
    }
    
    // 원본 문자열을 순회하며 'm'을 "rn"으로 바꾸어 복사합니다.
    int index = 0;
    for (int i = 0; i < len; i++) {
        if (rny_string[i] == 'm') {
            answer[index++] = 'r';
            answer[index++] = 'n';
        } else {
            answer[index++] = rny_string[i];
        }
    }
    
    // 문자열의 끝에 null 문자를 추가합니다.
    answer[new_len] = '\0';
    
    return answer;
}

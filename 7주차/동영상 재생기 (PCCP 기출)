class Solution {

    // "mm:ss" 형식의 시간을 초 단위로 변환하는 메서드
    private int timeToSeconds(String time) {
        String[] parts = time.split(":");
        int minutes = Integer.parseInt(parts[0]);
        int seconds = Integer.parseInt(parts[1]);
        return minutes * 60 + seconds;
    }

    // 초 단위 시간을 "mm:ss" 형식으로 변환하는 메서드
    private String secondsToTime(int seconds) {
        int minutes = seconds / 60;
        seconds = seconds % 60;
        return String.format("%02d:%02d", minutes, seconds);
    }

    public String solution(String video_len, String pos, String op_start, String op_end, String[] commands) {
        int videoLenSec = timeToSeconds(video_len);   // 비디오 길이
        int posSec = timeToSeconds(pos);               // 현재 위치
        int opStartSec = timeToSeconds(op_start);      // 오프닝 시작 시간
        int opEndSec = timeToSeconds(op_end);          // 오프닝 종료 시간

        for (String command : commands) {
            // 오프닝 구간을 건너뛰기 먼저 처리
            if (posSec >= opStartSec && posSec <= opEndSec) {
                posSec = opEndSec;
            }

            if (command.equals("prev")) {
                posSec = Math.max(0, posSec - 10);  // 10초 전으로 이동, 최소 0초
            } else if (command.equals("next")) {
                posSec = Math.min(videoLenSec, posSec + 10);  // 10초 후로 이동, 최대 동영상 길이
            }

            // 오프닝 구간을 건너뛰기 (명령 처리 후에도 다시 확인)
            if (posSec >= opStartSec && posSec <= opEndSec) {
                posSec = opEndSec;
            }
        }

        return secondsToTime(posSec);
    }
}

